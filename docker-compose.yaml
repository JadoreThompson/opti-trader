networks:
  app_network:
    driver: bridge


services:
  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Jadore10@
      - POSTGRES_DB=opti_trader
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d opti_trader -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 3


  my_redis:
    image: redis:latest
    ports:
      - "6379:6379"
    restart: unless-stopped # Auto Restart
    networks: 
      - app_network


  order-matcher-backend-api:
    build: .
    env_file: .env
    environment:
      - DB_HOST=postgres
      - DB_PASSWORD=Jadore10@
      - DB_NAME=opti_trader
      - REDIS_HOST=my_redis
    ports:
      - "8000:8000"
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy
      my_redis:
        condition: service_started


  order-matcher-frontend:
    build:
      context: C:\Users\ADMIN\Cloned_Projects\order-matcher-frontend
    ports: 
      - "5173:5173"
    networks:
      - app_network
    depends_on:
      - order-matcher-backend-api  
